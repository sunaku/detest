%#----------------------------------------------------------------------------
## EMULATION
%#----------------------------------------------------------------------------

DIFECTS can emulate several popular testing libraries:

<%
  emulation_layers = {
    'difects/spec' => '[RSpec]',
    'difects/unit' => '[Test::Unit]',
    'difects/mini' => '[Minitest]',
    'difects/long' => 'Readability',
  }
%>

% emulation_layers.each do |layer, title|

  * <%= layer %>:
    <%= title %> emulation layer

Simply require one of these emulation layers into your test suite and you can
write your tests using the familiar syntax of the testing library it emulates.

%#----------------------------------------------------------------------------
%# list the methods provided by the various emulation layers
%#----------------------------------------------------------------------------

% require 'difects'
% before = DIFECTS.instance_methods(false)
% sandbox = Object.new.extend(DIFECTS)

% emulation_layers.each do |layer, title|
  % require layer
  % after = DIFECTS.instance_methods(false)

  % unless before == after

    %#------------------------------------------------------------------------
    ### <%= layer %>
    %#------------------------------------------------------------------------

    This library emulates <%= title %> by adding the following methods to the
    `DIFECTS` module.

    % (after - before).sort.each do |method_name|
      % method = sandbox.method(method_name)

      % file, line = method.source_location
      % file = file.sub(DIFECTS::INSTDIR, '').sub(%r(^/+), '')
      % url = "#{github_url}/tree/master/#{file}#L#{line}"

      * `<%= method.name %>`(<%=
        method.parameters.map do |type, name|
          name = "_#{name}_" # italicize in markdown
          case type
          when :opt   then name + '=nil'
          when :rest  then '*' + name
          when :block then '&' + name
          else name
          end
        end.join(', ')
      %>):
        This method is defined at [<%= file %>:<%= line %>](<%= url %>).

    % before = after
